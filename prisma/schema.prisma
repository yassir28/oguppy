// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  password  String
  name      String?
  role      String   @default("user")
  tokens    Token[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Token {
  id        String   @id @default(cuid())
  token     String   @unique
  userId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  expires   DateTime
  createdAt DateTime @default(now())
}


model Item {
  id          String    @id @default(uuid())
  title       String
  description String?
  category    Category  @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  categoryId  String    
  sku         String    @unique
  barcode     String?
  quantity    Int
  unit        Unit      @relation(fields: [unitId], references: [id])
  unitId      String    
  brand       Brand     @relation(fields: [brandId], references: [id])
  brandId     String    
  sellingPrice  Float
  buyingPrice   Float
  reOrderPoint  Int
  location      String?
  imageUrl      String
  weight        Float?
  dimensions    String?
  taxRate       Float
  notes         String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

}

model Category {
  id          String    @id @default(uuid())
  title       String
  description String?
  items Item[]  // Add this line to create the opposite relation
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Unit {
  id String @id @default(uuid())
  title String
  abbreviation String
  items Item[]  // Add this line to create the opposite relation
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

}

model Brand {
  id String @id @default(uuid())
  title String
  items Item[]  // Add this line to create the opposite relation
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

}

model Warehouse {
  id String @id @default(uuid())
  title String
  location String?
  description String?
  warehouseType String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

}

